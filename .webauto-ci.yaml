version: 2

artifacts:
  - name: main
    metadata:
      play-ondemand.ci.web.auto/buildspec: Autoware-Humble_v0.29.0
    build:
      type: custom
      runtime:
        type: standard1/amd64/large
      source:
        vcstool:
          repositories_files:
            - autoware.repos
            - simulator.repos
            - tools.repos
          import_path: src
      environment_variables:
        AUTOWARE_PATH: /home/autoware/pilot-auto
        ML_MODELS_PATH: /opt/autoware/mlmodels
        DEBIAN_FRONTEND: noninteractive
        LANG: C.UTF-8
      developer_options:
        - name: webauto:ci:caret_enabled
          environment_variables:
            WEBAUTO_CI_BUILD_OPTION_CARET_ENABLED: ENABLED
      linux_parameters:
        kernel_version: 5.15.0-72-generic
      phases:
        - name: environment-setup
          user: root
          exec: ./.webauto-ci/main/environment-setup/run.sh
          caches:
            - name: apt-lists
              mountpoint: /var/lib/apt/lists
            - name: apt-archives
              mountpoint: /var/cache/apt/archives
          build_result_reuse:
            key_files:
              - .webauto-ci/main/environment-setup/**/*
        - name: autoware-setup
          user: autoware
          exec: ./.webauto-ci/main/autoware-setup/run.sh
          caches:
            - name: apt-lists
              mountpoint: /var/lib/apt/lists
            - name: apt-archives
              mountpoint: /var/cache/apt/archives
          build_result_reuse:
            key_files:
              - .webauto-ci/main/autoware-setup/**/*
              - ansible/**/*
              - ansible-galaxy-requirements.yaml
              - amd64.env
          incremental_build:
            enabled: true
        - name: autoware-build
          user: autoware
          exec: ./.webauto-ci/main/autoware-build/run.sh
          environment_variables:
            PARALLEL_WORKERS: "32"
            CCACHE_DIR: /tmp/build/cache/ccache
          caches:
            - name: apt-lists
              mountpoint: /var/lib/apt/lists
            - name: apt-archives
              mountpoint: /var/cache/apt/archives
            - name: ccache
              mountpoint: /tmp/build/cache/ccache
          build_result_reuse:
            key_files:
              - .webauto-ci/main/autoware-build/**/*
              - src/**/*
              - "!src/ecu_system_setup/**"
          incremental_build:
            enabled: true
        - name: ecu-system-setup
          user: autoware
          exec: ./.webauto-ci/main/ecu-system-setup/run.sh
          environment_variables:
            ECU_SYSTEM_SETUP_SOURCE_PATH: ansible
            ECU_SYSTEM_SETUP_ANSIBLE_PLAYBOOK: ansible/playbooks/ecu_setup.yaml
          caches:
            - name: apt-lists
              mountpoint: /var/lib/apt/lists
            - name: apt-archives
              mountpoint: /var/cache/apt/archives
          build_result_reuse:
            key_files:
              - .webauto-ci/main/ecu-system-setup/**/*
              - src/ecu_system_setup/**/*
              - ansible/**/*
              - ansible-galaxy-requirements.yaml
      base_container_image:
        from: ubuntu:22.04
        # from: ghcr.io/tier4/pilot-auto/base-image:latest # use base image
      output_container_image:
        from: autoware-build
        workdir: /home/autoware/pilot-auto
        user: autoware
      output_rootfs_image:
        from: ecu-system-setup
        persistent_file_path: /home/autoware/pilot-auto/.webauto-ci/main/ecu-system-setup/persistents.txt
      output_installer_image:
        from: ecu-system-setup
        type: iso
        base_iso: ubuntu-20.04.3-live-server-amd64

simulations:
  - name: lexus_planning_sim
    type: planning_sim_v2
    simulator:
      deployment:
        type: container
        artifact: main
      runtime:
        type: simulator/standard1/amd64/medium
        cpu: 8
        memory: 16384
      parameters:
        launch_autoware: "true"
        autoware_launch_package: autoware_launch
        autoware_launch_file: planning_simulator.launch.xml
        architecture_type: awf/universe/20230906
        vehicle_model: sample_vehicle
        sensor_model: sample_sensor_kit
        initialize_duration: "90"
  - name: localization
    type: localization
    simulator:
      deployment:
        type: container
        artifact: main
      runtime:
        type: standard1/amd64/large

release:
  components:
    - name: planning
      deployment:
        type: container
        artifact: main
    - name: perception
      deployment:
        type: container
        artifact: main
